version: '3.8'

services:
  # FastAPI Backend Service
  vel-pdf-api:
    build:
      context: ./vel-pdf-api
      dockerfile: Dockerfile
    container_name: vel-pdf-api
    restart: unless-stopped
    ports:
      - "${API_PORT:-8000}:8000"
    environment:
      - PORT=8000
      - HOST=0.0.0.0
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3000}
      - MAX_FILE_SIZE=${MAX_FILE_SIZE:-104857600}
      - UPLOAD_DIR=/app/uploads
      - OUTPUT_DIR=/app/outputs
    volumes:
      - api_uploads:/app/uploads
      - api_outputs:/app/outputs
    networks:
      - vel-pdf-network
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Next.js Frontend Service
  vel-pdf-web:
    build:
      context: ./vel-pdf-web
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://localhost:8000}
        - NEXT_PUBLIC_WS_URL=${NEXT_PUBLIC_WS_URL:-ws://localhost:8000}
    container_name: vel-pdf-web
    restart: unless-stopped
    ports:
      - "${WEB_PORT:-3000}:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://localhost:8000}
      - NEXT_PUBLIC_WS_URL=${NEXT_PUBLIC_WS_URL:-ws://localhost:8000}
    networks:
      - vel-pdf-network
    depends_on:
      vel-pdf-api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  vel-pdf-network:
    driver: bridge

volumes:
  api_uploads:
    driver: local
  api_outputs:
    driver: local
